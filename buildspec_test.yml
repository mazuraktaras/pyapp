version: 0.2
env:
  shell: bash
#  parameter-store:        # it's better to use secrets manager here
#    LOGIN: /epmc-acm/pyapp/sonar/token
  variables:
    LOGIN: a9ef1dbc62959f8110d07d83918ce9a72f2cc05b
    PACKAGE: "github.com/aws-cd/pyapp"


phases:
  install:
#    runtime-versions:
#      python: 3.8
    commands:
#      - env
#      - echo "/py/src/$(dirname ${PACKAGE})"
#      - echo "LOGIN ${LOGIN}"
      - mkdir -p "/py/src/$(dirname ${PACKAGE})"
      - ln -s "${CODEBUILD_SRC_DIR}" "/py/src/${PACKAGE}"
#      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - apt-get update
      - apt-get install -y jq
      - cd /tmp
      - wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip
      - echo "Download completed."
      - echo "Unziping downloaded file..."
      - unzip -q sonar-scanner-cli-4.4.0.2170-linux.zip
      - echo "Unzip completed."
      - rm sonar-scanner-cli-4.4.0.2170-linux.zip
      - export PATH=$PATH:/tmp/sonar-scanner-4.4.0.2170-linux/bin

  pre_build:
    commands:
      - cd "/py/src/${PACKAGE}"
#Uncomment it to add unit testing
   #   - go get -t ./...
   # Vet examines Go source code and reports suspicious constructs
   #   - go vet ./...
   # Run unit tests
   #   - go test ./...

  build:
    commands:
      - sonar-scanner -Dsonar.organization="mazuraktaras" -Dsonar.projectKey="mazuraktaras_pyapp" -Dsonar.login=$LOGIN -Dsonar.host.url="https://sonarcloud.io"
      - sleep 5
#      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=mazuraktaras_pyapp > result.json
#      - cat result.json
#      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi

artifacts:
  files:
    - '**/*'